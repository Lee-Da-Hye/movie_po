header {
    width: 1440px;
    margin: auto;
    height: 300px;
}

.navigation {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    z-index: 99;
    clip-path: circle(25px at calc(100% - 45px) 45px);
    transition: .3s ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
}
.lnb{ text-align: center; font-size: 44px;
    line-height: 2;
}
.lnb a{ color:#fff; 
    /* background-color: antiquewhite; */
    position: relative;
}
.lnb span{ position: relative; z-index: 1;}
.lnb a::after{ 
    content:'';
    display: block;
    width:  0px; 
    height: 100%;
    background-color: red;
    transition: 1s;
    position: absolute;
    z-index: 0; 
    left: 0; top:0;
}
.lnb a:hover::after{ 
    width:  100%; 
}


.navigation.active {
    clip-path: circle(75%);
}

.navigation .ham-btn {
    position: absolute;
    top: 20px;
    right: 20px;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
}

.navigation .ham-btn span {
    position: absolute;
    left: 50%;
    width: 50%;
    height: 3px;
    transform: translate(-50%, -50%);
    background-color: white;
}

.navigation .ham-btn span:nth-child(1) {
    top: 30%;
}

.navigation .ham-btn span:nth-child(2) {
    top: 50%;
}

.navigation .ham-btn span:nth-child(3) {
    top: 70%;
}

.navigation.active .ham-btn span:nth-child(1) {
    top: 50%;
    transform: translate(-50%, -50%) rotate(45deg);
}

.navigation.active .ham-btn span:nth-child(2) {
    opacity: 0;
}

.navigation.active .ham-btn span:nth-child(3) {
    top: 50%;
    transform: translate(-50%, -50%) rotate(-45deg);
}
.input-container {
    width: 1440px;
    margin: auto;
    display: flex;
    justify-content: flex-end;
    padding: 30px;
}

.input-box {
    width: 50px;
    height: 50px;
    border-radius: 25px;
    background-color: plum;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    transition: 0.4s ease-in-out;
}

.input-box>input {
    opacity: 0;
    width: 0;
}

.input-box>input::placeholder {
    text-indent: 8px;
}

.input-box.active {
    width: 300px;
    justify-content: space-evenly;
}

.input-box.active>input {
    opacity: 1;
    width: 80%;
    height: 30px;
    background-color: rgb(247, 234, 247);
    border: 1px solid plum;
    transition-delay: 0.2s;
}
 
.movies-contents {
    width: 1440px;
    margin: auto;
    display: grid;
    /* grid-template-columns: repeat(4, 1fr);  */
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 30px;
}

.movies-box {
    width: calc((100% - 90px) / 4);
    height: 500px;
    background-color: orange;

}

/* js 제어할 수도 있고 css로 제어할 수도 있고 */
.movie-details h3{
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    height: 2em;
}

.movie-img {
    height: 500px;
    overflow: hidden;
    /* 높이는 반응형 사이즈에 따라 일일히 조정할 필요 있음 */
}

.movie-img>img {
    width: 100%;
}

.detail-btn{ display: block; padding: 20px;
    border:1px solid black;
    color:#000;
    border-radius: 5px;
    position: relative;
}
.detail-btn::after{
    content:'';
    display: block;
    background-image: url(./images/caret-down-square-solid-24.png);
    width:25px; 
    height: 25px;
    position: absolute;
    right: 10px; top: 50%; 
    transform: translateY(-50%) rotate(-90deg);
}
@media screen and (max-width: 1490px) {
    .movies-contents {
        width: 98%;
    }
}


.category-container{
    width:1400px;
    margin: auto;
    display: flex;
    position: relative;
    margin-bottom: 100px;
}
.genre-container {
    width: 800px;
    margin-left: auto ;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
    padding: 10px;
}

.genre-container button {
    padding: 15px 10px;
    width: 120px;
}

.select-container{ 
    padding:32px;
    display: flex;
    flex-direction: column;
    width: 300px; 
    gap:10px; 
    position: absolute;
    top:0;
}

.select-container.active .selected::after{
    background: url(./images/caret-up-square-solid-24.png);
}
.select-container.active .options-container{
    max-height:240px; 
    opacity: 1;
    overflow-y: scroll;
}
.select-container  .options-container::-webkit-scrollbar{
    width:8px;
    background-color: black;
    border-radius: 0 8px 8px 0;
}
.select-container  .options-container::-webkit-scrollbar-thumb{
    background-color: bisque;
    border-radius: 0 8px 8px 0;
}
.select-box{
    display: flex;
    flex-direction: column;
    order:1;   
}
.selected{
    text-indent: 1em;
    order:0;
    background-color:cadetblue; 
    color: white;
    width:100%; 
    border-radius: 8px;
    height: 50px;
    line-height: 50px;
    position: relative;
    cursor: pointer;
}
.selected::after{
    content:'';
    background: url(./images/caret-down-square-solid-24.png);
    background-repeat: no-repeat;
    display: block;
    width: 25px; 
    height: 25px;
    position: absolute;
    right:10px;
    top: 15px;
}

.select-box input{ display: none;}
.options-container{ 
    background-color: cadetblue;
    color:white; 
    max-height: 0; 
    opacity:0;  
    transition: all 0.4s;
    border-radius: 8px;
    overflow: hidden;
}

.option{
    height: 50px;
    line-height: 50px; 
    cursor: pointer;
    text-indent: 1em;
}
.option:hover{
    background-color: rgb(46, 77, 78);
}
.option label{
    cursor: pointer;
}

/*  slide-container  */
.slide-container{ display: flex;}
/* 값을 가져오는지만 확인  */

@media screen and (max-width:1490px) {
    header{ width: 98%;}
    .category-container{ width: 98%;}
    .input-container{ width: 98%;}
}
@media screen  and  (max-width: 1200px) {
    .genre-container { width: 70%;}
    .genre-container button{ 
        padding: 15px 10px;
        width: 100px;
    }
}
@media screen  and  (max-width: 1000px) {
    .genre-container { width: 60%;}     
}
@media screen and (max-width:780px) {
    .category-container{ justify-content: center;}
    .genre-container{ display: none;}
    .select-container{ width: 90%; margin:auto;}
    .input-box.active {
        width: 90%;
        margin: auto;
    }
}

/*
  리펙터링
  중복 코드를 제거하여 하나의 함수 또는 클래스로 제어할 수 있도록 코드를 수정하는 것
  효율적인 코드로 수정하는 것
  예전에 했던 그냥 슬라이드 복사해서 붙여넣기 
*/
